   
 ************************************************************************ 
 *         MASTER MS2 5AG17 : DYNAMIQUE DES STRUCTURES II               * 
 *                     DEVOIR PERSONNEL                                 * 
 *                                                                      * 
 *    REPONSE VIBRATOIRE D'UN NOUVEAU DESIGN                            * 
 *    DE TUBE DE GENERATEUR DE VAPEUR                                   * 
 *    AUX DIMENSIONS ET CARACTERISTIQUES FICTIVES                       * 
 *    (Benoit Prabel, CEA,DEN,DM2S,SEMT,DYN)                            * 
 *                                                                      * 
 * PRENOM, NOM : Jean SCHWAGER                                          * 
 * NUMERO D'ETUDIANT : 3303438                                          * 
 *                                                                      * 
 ************************************************************************ 
   
 ************************************************************************ 
 * OPTIONS ET PARAMETRES 
 *********************************************************************** 
   
 * OPTIONS 
   OPTI DIME 3 ELEME SEG2 EPSI LINEAIRE; 
 *OPTI TRAC PSC EPTR 5 POTR HELVETICA_16; 
 *OPTI 'SORT' sortipara; 
   
 * GEOMETRIE + CARACTERISTIQUES du TUBE 
   H = 10.; 
   R = 1.5; 
   DTUBE = 0.020; 
   eTUBE = 0.001; 
   EY1   = 2.E11; 
   NU1   = 0.3; 
   RHO1  = 8000.; 
   
 * nombre de plaques entretoises par branche 
   NPE   = 9; 
   
 * position des Barres Anti-Vibratoires 
   NBAV    = 4; 
   DTETBAV = 180. / (NBAV + 1); 
   TETABAV = PROG DTETBAV 'PAS' DTETBAV 'NPAS' (NBAV - 1); 
   
 * taille de maille 
   DEN1  = 0.05; 
   
   
 ************************************************************************ 
 * MAILLAGE 
 ************************************************************************ 
   
 * DENSITE DE MAILLAGE 
   DENS DEN1; 
   
 * MESHPE  = points de Plaques Entretoises 
   MESHPE  = manu 'POI1' ; 
 * MESHBAV = points des Barres Anti-Vibratoires 
   MESHBAV = manu 'POI1' ; 
   
 * MESH1 = BRANCHE FROIDE 
   PSOL1 = 0. 0. 0.; 
   PTMP  = PSOL1; 
   MESH1 = PTMP; 
   DZ   = H / (NPE + 1); 
   VZ   = 0. 0. DZ; 
   iPE = 0; 
   REPE BCOLD NPE; iPE = iPE + 1; 
 *   on cree les points PE1, PE2 ... 
     PTMP = PTMP PLUS VZ; 
     NOMM (CHAI 'PE'iPE) PTMP; 
 *   Plaques Entretoises 
     MESHPE = MESHPE et PTMP; 
 *   on relie les points PSOL1 - PE1 - PE2 - ... 
     MESH1 = MESH1 DROI PTMP; 
   FIN  BCOLD; 
 * point final 
   PC1   = PTMP PLUS VZ; 
   MESH1 = MESH1 DROI PC1; 
   MESH1 = MESH1 COUL 'BLEU'; 
   
 * MESH2 = BRANCHE CHAUDE 
   PSOL2 = (2.*R) 0. 0.; 
   PTMP = PSOL2; 
   MESH2 = PTMP; 
   iPE = 2*NPE + 1; 
   REPE BHOT NPE; iPE = iPE - 1; 
 *   on cree les points PE1, PE2 ... 
     PTMP = PTMP PLUS VZ; 
     NOMM (CHAI 'PE'iPE) PTMP; 
 *   Plaques Entretoises 
     MESHPE = MESHPE et PTMP; 
 *   on relie les points PSOL1 - PE1 - PE2 - ... 
     MESH2 = MESH2 DROI PTMP; 
   FIN  BHOT; 
 * point final 
   PC2   = PTMP PLUS VZ; 
   MESH2 = MESH2 DROI PC2; 
   MESH2 = MESH2 COUL 'ROUG'; 
   
 * MESH3 = CINTRE 
 * centre 
   PCENTRE = R 0. H; 
 * point d'excitation : PEX1 
   PEX1    = R 0. (H + R); 
 *   TETAEX2 = 180. - 54.; 
   TETAEX2 = 125.05263; 
   SINEX2 = SIN TETAEX2; COSEX2 = COS TETAEX2; 
   PEX2    = PCENTRE PLUS (R * (COSEX2 0. SINEX2)); 
 * on cree les points PBAV1, PBAV2, ... 
   REPE BBAV NBAV; 
     TETATMP = EXTR TETABAV (NBAV - &BBAV + 1); 
     SINTMP  = SIN TETATMP; COSTMP = COS TETATMP; 
     PTMP    = PCENTRE PLUS (R * (COSTMP 0. SINTMP)); 
     NOMM (CHAI 'PBAV'&BBAV) PTMP; 
     MESHBAV = MESHBAV et PTMP; 
   FIN  BBAV; 
 * on relie les points 
   MESH3 = (CERC PC1   PCENTRE PBAV1) ET (CERC PBAV1 PCENTRE PEX2) 
        ET (CERC PEX2  PCENTRE PBAV2) 
        ET (CERC PBAV2 PCENTRE PEX1 ) ET (CERC PEX1  PCENTRE PBAV3) 
        ET (CERC PBAV3 PCENTRE PBAV4) ET (CERC PBAV4 PCENTRE PC2  ); 
   MESH3 = MESH3 COUL 'VIOL'; 
   
 * ASSEMBLAGE ET TRACE 
   MESHTOT = MESH1 ET MESH3 ET (INVE MESH2); 
   EYE3D = 60. -130. 90.; 
   TRAC EYE3D (MESHTOT ET MESHPE ET MESHBAV); 
   
   
 ************************************************************************ 
 * MODELE ET MATERIAU 
 ************************************************************************ 
   
 * CALCUL DES CARACTERISTIQUES 
   RTUBE = 0.5*DTUBE; 
   RINT = RTUBE - eTUBE; 
   DINT = DTUBE - (2.*eTUBE); 
   S1    = pi * ((RTUBE**2) - (RINT**2)); 
   Iny1  = pi * ((DTUBE**4) - (DINT**4)) / 64.; 
   Inx1  = pi * ((DTUBE**4) - (DINT**4)) / 32.; 
   
 * MODELE ET MATERIAU 
   MODTOT = MODE MESHTOT 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE' 'TIMO'; 
   MATTOT = MATE MODTOT 'YOUN' EY1 'NU' NU1 'RHO' RHO1 
                        'SECT' S1 'INRY' Iny1 'INRZ' Iny1 'TORS' Inx1; 
   
 ************************************************************************ 
 * MATRICES, CONDITIONS AUX LIMITES 
 ************************************************************************ 
   
   K1 = RIGI MODTOT MATTOT; 
   M1 = MASS MODTOT MATTOT; 
   
 * blocage au sol 
   BLO1 = BLOQ 'DEPL' 'ROTA' (PSOL1 ET PSOL2); 
   K1TOT = K1 ET BLO1; 
   
 * appui aux PE 
   BLO2 = BLOQ 'UX' 'UY' MESHPE; 
   K2TOT = K1 ET BLO1 ET BLO2; 
   
 * Question 1 : 
 *     Quel type d'Ã©lÃ©ments est utilisÃ©s ? 
 * -->  Des Ã©lÃ©ments de type SEG2 (segement Ã  deux neuds lineaire) 
 *     Cela vous semble-t-il justifiÃ© ? 
 * --> theorie des poutre : 1D. donc Ã©lÃ©ments de type poutre 
 *     espace d'Ã©volution 3D : problÃ¨me Ã  trois dimensions 
 *     LinÃ©aire bien pour un premier calcul 
 *     ce ne sont pas des barre (notre problÃ¨me :travail en flexion) 
 * 
 *     Combien d'Ã©lÃ©ments comporte le maillage fourni ? 
   NBELTOT = NBEL MESHTOT; 
   MESS '--> il y a 'NBELTOT 'elements'; 
 *     Cela vous semble-t-il suffisant ? Comment pourrait-on le savoir ? 
 * -->Pour crÃ©er le maillage l'opÃ©rateur DENS est utilisÃ©. La gÃ©omÃ©trie est construite tel qu'il y ai 20 Ã©lÃ©ments entre deux plaques. Cela me semble suffisant, cependant pour s'en assurer il faudrait faire une Ã©tude de convergeance. 
   
 * Question 2 : 
 *     Les points PE1, PE2, ... reprÃ©sentent les plaques entretoises 
 *     percÃ©es. Combien y en a t'il? 
 * --> Il y en a 9 (deux points par plaque exemple : PE1 et PE18 appartiennent Ã  la mÃªme plaque). 
 *     On choisit une modÃ©lisation de type "appui simple glissant". 
 *     Quels ddl bloquer ? 
 * --> BLOQ UX UY. On bloc UX et UY, dÃ©placement celon UZ libre : c'est un appui simple glissant suivant Z. 
   
 * Question 3 : 
 *     Quel est le nom des points positionnÃ©s en face des 
 *     Barres Anti-Vibratoire ? 
 * --> PBAV1, PBAV2, PBAV3, PBAV4 
   
   
 ************************************************************************ 
 * CALCUL DES MODES PROPRES 
 ************************************************************************ 
   
 * Calcul des 40 premiers modes propres (base modale appuye aux PE) 
   NMOD1   = 40; 
   WSHIFT1 = 1.; 
   TMOD1 = VIBR 'IRAM' WSHIFT1 NMOD1 K2TOT M1 'TBAS'; 
   mopost = mots 'TABL' 'VTK'; 
   POSTVIBR TMOD1 mopost; 
 * POSTVIBR  PROCEDUR  BP208322  17/10/03    21:16:26     9580 
 *======================================================= 
 * 
 * POSTVIBR 
 * VISUalisation selon le mot clé : 
 *   'TABL' : écrit le tableau des données d'une base modale 
 *   'DEFO' : tracé les deformees modales 
 *   'DEF0' : tracé du maillage non deforme 
 *   'VTK'  : sortie du maillage + deformees 
 *   'LIST' : creation des listchpo des deformees, des listreel des 
 *            frequences, des masses generalisees... 
 *   'MAIL' : creation du maillage des point_repere 
 * creation : BP 06/01/2015 
 * 
 *======================================================= 
   
   
 DEBPROC POSTVIBR TBAS1*'TABLE' LMOC1/'LISTMOTS' TOPT1/'TABLE' ; 
   
   
 * TBAS1 : table de type BASE_MODALE ou LIAISONS_STATIQUES 
 * LMOC1 : mots-cles definissant les actions a produire 
 * TOPT1 : table d'options contenant : 
 *       . 'LISTE_MODES' : liste des modes a traiter 
 *       . 'MAILLAGE'    : maillage sur lequel tracer les deformees 
 *       . 'TITRE'       : debut de titre lors du trace des deformees 
 *       . 'FICHIER_VTK' : repertoire + nom de fichier de sortie VTK 
 *       . 'MAILLAGE_2'  : maillage supplementaire a utiliser (ex: ARET) 
   
   
 * VERIF et RECUP DES DONNEES D'ENTREE ---------------------------------- 
   
 * TABLE DES MODES 
   
   SI (NON (EXIS TBAS1 'SOUSTYPE')); 
     MESS 'LA TABLE D ENTREE DOIT AVOIR UN SOUSTYPE !'; 
     ERRE 21; 
   FINSI; 
   FLMODA = EGA TBAS1 . 'SOUSTYPE' 'BASE_MODALE'; 
   FLSTAT = EGA TBAS1 . 'SOUSTYPE' 'LIAISONS_STATIQUES'; 
   SI ((NON FLMODA) ET (NON FLSTAT)); 
     MESS 'LA TABLE D ENTREE DOIT ETRE DE SOUSTYPE '; 
          'BASE_MODALE ou LIAISONS_STATIQUES !'; 
     ERRE 21; 
   FINSI; 
   
   SI (FLMODA); 
     TMOD1 = TBAS1 . 'MODES'; 
     SI (NEG TMOD1 . 'SOUSTYPE' 'BASE_DE_MODES'); 
       MESS 'L INDICE MODES DE LA TABLE D ENTREE DOIT ETRE DE SOUSTYPE ' 
           'BASE_DE_MODES !'; 
       ERRE 21; 
     FINSI; 
     nmod1 = (DIME TMOD1) - 2; 
   SINON; 
     TMOD1 = TBAS1; 
     nmod1 = (DIME TMOD1) - 1; 
   FINSI; 
   SI (nmod1 < 1); 
     MESS 'ABSENCE DE MODES !'; 
     QUIT  POSTVIBR; 
   FINSI; 
   
   
 * LISTE DES MOTS-CLES 
   
 * valeurs par defaut 
   SI (NON (EXIS LMOC1)); 
     LMOC1 = MOTS 'TABL' 'DEFO' 'DEF0' 'MAIL'; 
   FINSI; 
   
 * logiques 
   FLTABL = EXIS LMOC1 'TABL'; 
   FLDEFO = EXIS LMOC1 'DEFO'; 
 * attention DEF0 avec "zero" et pas DEFO avec un "o" 
   FLDEF0 = EXIS LMOC1 'DEF0'; 
   FLVTK  = EXIS LMOC1 'VTK'; 
   FLLIST = EXIS LMOC1 'LIST'; 
   FLMAIL = EXIS LMOC1 'MAIL'; 
   FLNOLX = EXIS LMOC1 'NOLX'; 
   
   
 * TABLE DES OPTIONS 
   
 * valeurs par defaut 
   LENT1 = LECT 1 PAS 1 nmod1; 
   SI (EXIS TMOD1 'MAILLAGE'); 
     MESH1 = TMOD1 . 'MAILLAGE'; 
   FINSI; 
   cha20 = mot ' '; 
 *   ficvtk = mot 'VTK/DEFORMEE_MODALE'; 
   ficvtk = mot 'DEFORMEE_MODALE'; 
   
 * on recupere tout ce qu'on peut si la table existe vraiment 
   FLOPT1 = FAUX; 
   FMESH2 = FAUX; 
   SI (EXIS TOPT1); FLOPT1 = EGA (TYPE TOPT1) 'TABLE';  FINSI; 
   SI FLOPT1; 
     SI (EXIS TOPT1 'LISTE_MODES'); 
       LENT1 = TOPT1 . 'LISTE_MODES'; 
     FINSI; 
     SI (EXIS TOPT1 'MAILLAGE'); 
       MESH1 = TOPT1 . 'MAILLAGE'; 
     FINSI; 
     SI (EXIS TOPT1 'MAILLAGE_2'); 
       MESH2 = TOPT1 . 'MAILLAGE_2'; 
       FMESH2 = EGA (TYPE MESH2) 'MAILLAGE'; 
     FINSI; 
     SI (EXIS TOPT1 'TITRE'); 
       cha20 = TOPT1 . 'TITRE'; 
     FINSI; 
     SI (EXIS TOPT1 'FICHIER_VTK'); 
       ficvtk = TOPT1 . 'FICHIER_VTK'; 
     FINSI; 
   FINSI; 
   
 * eventuelles erreurs 
   SI (NEG (TYPE LENT1) 'LISTENTI'); 
     MESS 'VEUILLEZ FOURNIR UN LISTENTI POUR LISTE_MODES !'; ERRE 21; 
   FINSI; 
   SI (NEG (TYPE MESH1) 'MAILLAGE'); 
     MESS 'VEUILLEZ FOURNIR UN MAILLAGE !'; ERRE 21; 
   FINSI; 
 * ajout de UNIQ pour le cas des mulitcouches 
   MESH1 = UNIQ MESH1; 
   SI (NEG (TYPE cha20) 'MOT'); 
     MESS 'VEUILLEZ FOURNIR UN MOT POUR TITRE !'; ERRE 21; 
   FINSI; 
   SI (NEG (TYPE ficvtk) 'MOT'); 
     MESS 'VEUILLEZ FOURNIR UN MOT POUR FICHIER_VTK !'; ERRE 21; 
   FINSI; 
   
   
   
 * PREPARATION ---------------------------------------------------------- 
   
 * recup des noms de composantes 
   idime  = VALE 'DIME' ; 
   momode = VALE 'MODE' ; 
   si (ega idime 3); 
     modepl = mots  'UX'  'UY'  'UZ'; 
     modeplI= mots 'IUX' 'IUY' 'IUZ'; 
   sinon; 
     si ((ega momode 'AXIS') ou (ega momode 'FOUR')); 
       modepl = mots  'UR'  'UT'  'UZ'; 
       modeplI= mots 'IUR' 'IUT' 'IUZ'; 
     sinon; 
       modepl = mots  'UX'  'UY' '--'; 
       modeplI= mots 'IUX' 'IUY' '--'; 
     finsi; 
   finsi; 
   modeplC = modepl et modeplI; 
   modepl1 = extr modepl  1; 
   modepl2 = extr modepl  2; 
   modepl3 = extr modepl  3; 
   modeplI1= extr modeplI 1; 
   modeplI2= extr modeplI 2; 
   modeplI3= extr modeplI 3; 
   
 * --- dans le cas TABL --- 
   SI FLTABL; 
     SI (FLMODA); 
       chaline = chai 
            '+------+--------------+--------------+--------------+' 
             '---------------------------------------+'; 
       mess chaline; 
   
       MESS '| Mode |  Frequence   |  Masse gen.  | POINT_REPERE |' 
             '               RESULTANTE               |'; 
       MESS '|  n°  |     (Hz)     |      M*      |  (ddl ALFA)  |' 
 *             '      UX           UY           UZ     |'; 
             '       'modepl1'         'modepl2'         'modepl3'   |'; 
       mess chaline; 
     SINON; 
       chaline = chai 
            '+------+-------------+----------------+--------------+'; 
       mess chaline; 
       MESS '| Ustat|  Deplacement unitaire impose | POINT_REPERE |'; 
       MESS '|  n°  |     ddl     |      noeud     |  (ddl BETA)  |'; 
       mess chaline; 
     FINSI; 
   FINSI; 
   
 * --- dans le cas DEFO --- 
   SI FLDEFO; 
   
 *   calcul d'une longueur caracteristique 
     si (ega idime 3); 
       XC0 YC0 ZC0 = COOR MESH1 ; 
       XA0 = (MAXI XC0) - (MINI XC0) ; 
       YA0 = (MAXI YC0) - (MINI YC0) ; 
       ZA0 = (MAXI ZC0) - (MINI ZC0) ; 
       AMPL0 = ((XA0**2) + (YA0**2) + (ZA0**2))**0.5 ; 
     sinon; 
       XC0 YC0 = COOR MESH1 ; 
       XA0 = (MAXI XC0) - (MINI XC0) ; 
       YA0 = (MAXI YC0) - (MINI YC0) ; 
       AMPL0 = ((XA0**2) + (YA0**2))**0.5 ; 
     finsi; 
   FINSI; 
   
 * --- dans le cas LIST --- 
   SI FLLIST; 
     LCHPO1 = SUIT; 
     LFREQ1 = PROG; 
     LMGEN1 = PROG; 
   FINSI; 
   
 * --- dans le cas MAIL --- 
   SI FLMAIL; 
     MESHAB = MANU 'POI1'; 
   FINSI; 
   
   
   
 * BOUCLE SUR LES MODES ---------------------------------- 
   
 imod1 = 0; 
 REPE BMOD1 nmod1; imod1 = imod1 + 1; 
   
   
 * --- RECUP DES DONNEEES DU MODE --- 
   
   i1 = extr LENT1 imod1; 
   SI (NON (EXIS TMOD1 i1)); 
     ITER BMOD1; 
   FINSI; 
   FLI = FAUX; 
   iux1 = mot '    ---    '; 
   iuy1 = mot '    ---    '; 
   iuz1 = mot '    ---    '; 
   SI (FLMODA); 
     si (exis TMOD1 . i1   'NUMERO_MODE'); 
       num1   = TMOD1 . i1 . 'NUMERO_MODE'; 
     sino; 
       num1 = i1; 
     finsi; 
 *   cas valeur propre complexe 
     FLCPLX = EXIS TMOD1 . i1 'FREQUENCE_REELLE'; 
     si FLCPLX; 
       frq1R  = TMOD1 . i1 . 'FREQUENCE_REELLE'; 
       mas1R  = TMOD1 . i1 . 'MASSE_GENERALISEE_REELLE'; 
       phi1R  = TMOD1 . i1 . 'DEFORMEE_MODALE_REELLE'; 
       frq1I  = TMOD1 . i1 . 'FREQUENCE_IMAGINAIRE'; 
       mas1I  = TMOD1 . i1 . 'MASSE_GENERALISEE_IMAGINAIRE'; 
       phi1I  = TMOD1 . i1 . 'DEFORMEE_MODALE_IMAGINAIRE'; 
       afrq1 = (abs frq1R) + (abs frq1I); 
       amas1 = (abs mas1R) + (abs mas1I); 
 *     petite ruse pour l affichage 
       phi1 = (EXCO phi1R modepl modepl  'NOID' 'NATURE' 'DIFFUS') 
           et (EXCO phi1I modepl modeplI 'NOID' 'NATURE' 'DIFFUS'); 
       frq1 =  frq1R; 
       mas1 =  mas1R; 
 *   cas valeur propre reelle 
     sinon; 
       frq1   = TMOD1 . i1 . 'FREQUENCE'  ; 
       mas1   = TMOD1 . i1 . 'MASSE_GENERALISEE'; 
       phi1   = TMOD1 . i1 . 'DEFORMEE_MODALE'; 
       afrq1 = abs frq1; 
       amas1 = abs mas1; 
     finsi; 
     rphi1  = RESU phi1; 
     morphi1= EXTR rphi1 'COMP'; 
     prphi1 = EXTR rphi1 'MAILLAGE'; 
 *   on verifie la compatibilite des noms d'inconnues 
     FLPHI1 = ((DIME morphi1) > 0) ET ((NBEL prphi1) > 0); 
     SI FLPHI1; 
       prphi1 = prphi1 POIN 'INITIAL'; 
       ux1    = EXTR rphi1 modepl1 prphi1; 
       uy1    = EXTR rphi1 modepl2 prphi1; 
       si (ega modepl3 '--'); uz1    = mot '--'; 
       sinon;                 uz1    = EXTR rphi1 modepl3 prphi1; 
       finsi; 
       si (exis morphi1 modeplI1); 
         FLI = VRAI;  iux1 = EXTR rphi1 modeplI1 prphi1; 
       finsi; 
       si (exis morphi1 modeplI2); 
         FLI = VRAI;  iuy1 = EXTR rphi1 modeplI2 prphi1; 
       finsi; 
       si (exis morphi1 modeplI3); 
         FLI = VRAI;  iuz1 = EXTR rphi1 modeplI3 prphi1; 
       finsi; 
     SINON; 
       ux1 = mot '    ---    ';   uy1 = ux1;   uz1 = ux1; 
     FINSI; 
     OUBL prphi1; DETR rphi1; 
   SINON; 
     num1 = i1; 
     ptl1 = TMOD1 . i1 . 'POINT_LIAISON'; 
     iptl1 = NOEU ptl1; 
     ddl1 = TMOD1 . i1 . 'DDL_LIAISON'; 
     phi1 = TMOD1 . i1 . 'DEFORMEE'; 
   FINSI; 
     prep1  = TMOD1 . i1 . 'POINT_REPERE'; 
     iprep1 = NOEU prep1; 
   
 * --- option TABLEAU --- 
   
   SI FLTABL; 
 *   cas base de modes propres 
     SI (FLMODA); 
       si ((afrq1 < 10000.) et (afrq1 > 1.E-3)); FMT1 = mot '(F13.4)'; 
       sinon;                                    FMT1 = mot '(E13.6)'; 
       finsi; 
       si ((amas1 < 10000.) et (amas1 > 1.E-3)); FMT2 = mot '(F13.4)'; 
       sinon;                                    FMT2 = mot '(E13.6)'; 
       finsi; 
       FMT3 = mot '(F13.4)'; 
       cha1 = CHAI '|'              num1   *6    ' |' 
                       FORMAT FMT1  frq1         ' |' 
                       FORMAT FMT2  mas1         ' |' 
                                   iprep1  *50  '  |' 
                       FORMAT FMT3  ux1 uy1 uz1  ' |'; 
       mess cha1; 
 *     cas valeur propre complexe 
       si FLCPLX; 
         cha1I = CHAI '|'                ' ' *6      '+i' 
                         FORMAT FMT1  frq1I         ' |' 
                         FORMAT FMT2  mas1I        ' |' 
                                         ' '  *50  '  |' 
                         FORMAT FMT3 iux1 iuy1 iuz1  ' |'; 
         mess cha1I; 
       sinon; 
 *       composantes complexes 
         SI FLI; 
           cha1I = CHAI '|'   ' ' *50  '  |' 
                         FORMAT FMT3 iux1 iuy1 iuz1  ' |'; 
           mess cha1I; 
         FINSI; 
       finsi; 
 *   cas base de modes statiques 
     SINON; 
       cha1 = CHAI '|'               num1  *6        ' |' 
                                     ddl1  *17    '    |' 
                                    iptl1  *32  '      |' 
                                    iprep1 *50     '   |'; 
       mess cha1; 
     FINSI; 
   FINSI; 
   
 * --- option DEFORMEE --- 
   
   SI FLDEFO; 
     AMPU1 = MAXI (EXCO modeplC phi1 'NOID') 'ABS'; 
     SI (EXIS TMOD1 . i1  'ISOVALEUR'); 
       UNORM1 = TMOD1 . i1  . 'ISOVALEUR'; 
       SI (NEG (TYPE UNORM1) 'CHPOINT'); 
         MESS 'ISOVALEUR du 'i1'eme mode doit etre un CHPOINT !'; 
         ERRE 21; 
       FINSI; 
     SINON; 
       UNORM1 = (PSCA phi1 phi1 modeplC modeplC)**0.5; 
       TMOD1 . i1  . 'ISOVALEUR' = UNORM1; 
     FINSI; 
     SI (AMPU1 < 1.E-100); 
       DEFO1 = DEFO MESH1 phi1 UNORM1; 
     SINON; 
       XAMP1 = 0.05 * (AMPL0 / AMPU1) ; 
       DEFO1 = DEFO MESH1 phi1 XAMP1 UNORM1; 
     FINSI; 
     SI (FLMODA); 
       cha2 = CHAI cha20 'Mode ' num1 ' : f=' frq1 'Hz'; 
     SINON; 
       cha2 = CHAI cha20 ' Ustat ' num1 ' : ' ddl1 '(#' iptl1 ')=1'; 
     FINSI; 
     SI (FLDEF0) ; 
 *       DEFO1 = (DEFO MESH1 phi1 0 'GRIS' (0.*UNORM1)) et DEFO1; 
       DEFO1 = (DEFO MESH1 phi1 0 'GRIS') et DEFO1; 
     FINSI; 
     SI FMESH2; 
       TRAC DEFO1 MESH2 'TITRE' cha2; 
     SINON; 
       TRAC DEFO1 'TITRE' cha2; 
     FINSI; 
   FINSI; 
   
 * --- option LISTES --- 
   
   SI FLLIST; 
     LCHPO1 = LCHPO1 et phi1; 
     LFREQ1 = LFREQ1 et frq1; 
     SI (FLMODA);  LMGEN1 = LMGEN1 et mas1; FINSI; 
   FINSI; 
   
 * --- option MAILLAGE --- 
   SI FLMAIL; 
     MESHAB = MESHAB et prep1; 
   FINSI; 
   
 * --- option NOLX --- 
   SI FLNOLX; 
     SI (FLMODA); 
       TMOD1 . i1 . 'DEFORMEE_MODALE' = phi1 ENLE 'LX'; 
     SINON; 
       TMOD1 . i1 . 'DEFORMEE' = phi1 ENLE 'LX'; 
     FINSI; 
   FINSI; 
   
 * --- option VTK --- 
   SI FLVTK; 
     OPTI 'SORT' ficvtk; 
     SI FLI; 
       SORT 'VTK'   MESH1 'MAIL' 
                   (EXCO phi1 modepl)         'DEPL_R' 
                   (EXCO phi1 modeplI modepl) 'DEPL_I' 
                   'TEMP' (FLOT i1) ; 
     SINON; 
       SORT 'VTK'   MESH1 'MAIL' 
                   (EXCO phi1 modepl)         'DEPL' 
                   'TEMP' (FLOT i1) ; 
     FINSI; 
   FINSI; 
   
 FIN  BMOD1; 
   
   
   SI FLTABL; 
     mess chaline; 
   FINSI; 
   
   SI FLLIST; 
     TBAS1 . 'LISTE_DEFORMEES'  = LCHPO1; 
     TBAS1 . 'LISTE_FREQUENCES' = LFREQ1; 
     SI (FLMODA);  TBAS1 . 'LISTE_MASSES' = LMGEN1; FINSI; 
   FINSI; 
   
   SI FLMAIL; 
     TBAS1 . 'MAILLAGE_REPERE'  = MESHAB; 
   FINSI; 
   
 FINPROC; 
   
 * Question 4: 
 *     Existe-t-il des modes doubles ? Lesquels ? 
 * --> ... 
   
 * Question 5: 
 *     Classez les 10 premiers modes selon qu'ils sont hors-plan ou plan. 
 *  +--------+----------------+--------- 
 *  |  mode  | frequence (Hz) | Plan ou Hors Plan ? 
 *  +--------+----------------+--------- 
 *  |    1   |  1.6535        | Hors Plan 
 *  |    2   |  3.4545        | Plan 
 *  |    3   |  4.2367        | Hors Plan 
 *  |    4   |  9.7731        | Plan 
 *  |    5   |  10.1076       | Hors Plan 
 *  |    6   |  18.9272       | Hors Plan 
 *  |    7   |  18.9923       | Plan 
 *  |    8   |  29.6556       | Hors Plan 
 *  |    9   |  29.8684       | Plan 
 *  |   10   |  41.8109       | Hors plan 
   
   
 * Question 6: 
 *     Si du fluide au repos avait Ã©tÃ© prÃ©sent Ã  l'interieur du tube, 
 *     quelle caractÃ©ristique matÃ©riau, aurait-on du modifier ? 
 * --> Il faudrait changer le module d'inertie en prenant en compte les deux masses volumiques avec notre tube creux et le cylindre de liquide Ã  l'interieur du tube. 
 *     Comment aurait alors varier les frÃ©quences propres ? 
 * --> la masse volumique global du tube augmentant les frÃ©quences propres vont donc diminuer car elles sont proportionnelles Ã  (C/rho)^0.5. 
   
   
 ************************************************************************ 
 * ANALYSE HARMONIQUE 
 ************************************************************************ 
   
 * Question 7 : 
 *     Rappelez l'Ã©quation d'Ã©quilibre dynamique discrÃ©tisÃ©e 
 *     en l'absence d'amortissement 
 * -->  M(d^2u/dt^2)+Ku(t)=F(t) 
   
 * Question 8 : 
 *     Vu la forme particuliÃ¨re du chargement, donnez l'expression de la 
 *     solution Ã©tablie : 
 * --> u(t) = u(t) = A_i sin(Omega t) 
   
 * Question 9 : 
 *     Transformez en equation algebrique lineaire 
 * --> -M*A_i*Omega^2 + K*A_i = F0 
   
 * Question 10 : 
 *     Calculer l'Ã©volution avec \Omega des rÃ©ponses aux points PEX1 et 
 *     PEX2 pour les deux chargements 
   
   F0 = 5.; 
 * chargement harmonique en PEX1 
   FEX1 = FORC 'FY' F0 PEX1; 
 * chargement harmonique en PEX2, normal au tube 
   FEX2 = FORC 'FX' (-1.*F0*(cos TETAEX2)) 
               'FZ' (-1.*F0*(sin TETAEX2)) PEX2; 
   
 * frequences d'excitation 
   prOMEGHZ = prog 0.1 PAS 0.1 50.; 
   prOMEG   = 2.*pi * prOMEGHZ; 
   nOMEG  = DIME prOMEG; 
 * reponse a FEX1 : 
 * - au point EX1 selon y 
     uy1_EX1 = prog; 
 * - au point EX2 selon y 
     uy2_EX1 = prog; 
 * reponse a FEX2 : 
 * - au point EX1 selon x,z 
     ux1_EX2 = prog;  uz1_EX2 = prog; 
 * - au point EX2 selon x,z 
     ux2_EX2 = prog;  uz2_EX2 = prog; 
   
 * boucle sur les frequences d'excitation 
   REPE BOMEG nOMEG; 
     OMEG = EXTR prOMEG &BOMEG; 
     mess 'calcul pour OMEG='OMEG'rad/s'; 
     ZHARM1 = K2TOT ET (-1*(OMEG**2)*M1) ; 
 *   reponse a FEX1 : 
     UHARM1 = RESO ZHARM1 FEX1; 
     uy1_EX1 = uy1_EX1 ET (EXTR UHARM1 'UY' PEX1); 
     uy2_EX1 = uy2_EX1 ET (EXTR UHARM1 'UY' PEX2); 
 *   reponse a FEX2 : 
     UHARM2 = RESO ZHARM1 FEX2; 
     ux1_EX2 = ux1_EX2 ET (EXTR UHARM2 'UX' PEX1); 
     ux2_EX2 = ux2_EX2 ET (EXTR UHARM2 'UX' PEX2); 
     uz1_EX2 = uz1_EX2 ET (EXTR UHARM2 'UZ' PEX1); 
     uz2_EX2 = uz2_EX2 ET (EXTR UHARM2 'UZ' PEX2); 
   FIN  BOMEG; 
   
 * courbes 
   evy1_EX1 = EVOL BLEU MANU LEGE 'UY(EX1)_{1}' 
             '\w (Hz)' prOMEGHZ '|u|' (abs uy1_EX1) ; 
   evy2_EX1 = EVOL AZUR MANU LEGE 'UY(EX2)_{1}' 
             '\w (Hz)' prOMEGHZ '|u|' (abs uy2_EX1) ; 
   evx1_EX2 = EVOL ROUG MANU LEGE 'UX(EX1)_{2}' 
             '\w (Hz)' prOMEGHZ '|u|' (abs ux1_EX2) ; 
   evx2_EX2 = EVOL ORAN MANU LEGE 'UX(EX2)_{2}' 
             '\w (Hz)' prOMEGHZ '|u|' (abs ux2_EX2) ; 
   evz1_EX2 = EVOL VERT MANU LEGE 'UZ(EX1)_{2}' 
             '\w (Hz)' prOMEGHZ '|u|' (abs uz1_EX2) ; 
   evz2_EX2 = EVOL TURQ MANU LEGE 'UZ(EX2)_{2}' 
             '\w (Hz)' prOMEGHZ '|u|' (abs uz2_EX2) ; 
   
   TITRE (chai 'ANALYSE HARMONIQUE lineaire'); 
   dess (evy1_EX1 et evy2_EX1) 'LOGY' LEGE; 
   dess (evx1_EX2 et evx2_EX2 et evz1_EX2 et evz2_EX2)'LOGY' LEGE; 
   dess (evy1_EX1 et evy2_EX1 et evx1_EX2 et evx2_EX2 et evz1_EX2 
      et evz2_EX2)'LOGY' LEGE; 
   
 * Question 11 : 
 *     OÃ¹ se situent les pics de rÃ©sonance pour le premier chargement ? 
 * --> ils se situent certaines frÃ©quences propres des modes hors plan mais pas tous. 
 *Les modes hors plan non prÃ©sent correspondent avec des modes ou le point de sollicitation est un noeud de vibration. Cela entraine une impossibilitÃ© de soliitation de la structure. 
 *     pour le second ? 
 * --> Ils se situent aux frÃ©quences des modes Plans. On peut cependant observer que certains points restent immobiles selon des directions Ã  certaines frÃ©quences exemple : le dÃ©placement suivant z au point PEX1 pour le premier mode plan est nul car c'est un noed de vibration sur cet axe. 
 *     Expliquez les Ã©ventuelles diffÃ©rences 
 * --> Pour le premier chargement on ne peut pas observer tous les modes de vibration. en effet le choix des points est important. 
   
 * Question 12 : 
 *     Est-il possible de donner immÃ©diatement la rÃ©ponse au chargement 
 *     combinÃ© F^1(t)+F^2(t) ? Justifiez. 
 * --> Dans ce cas oui car les chargements sont "indÃ©pendant" les un des autres de part leur orthogonalitÃ© 
 *     Cela aurait-il Ã©tÃ© possible si les deux chargements n'Ã©taient pas 
 *     orthogonaux ? 
 * --> Non, les sollicitation interfereraient entre elles. 
   
   
 ************************************************************************ 
 * ANALYSE LINEAIRE PAR INTEGRATION TEMPORELLE SUR BASE MODALE 
 ************************************************************************ 
   
 * parametres temporels 
   wmax = (2.*pi*100); 
   DTc  = 2./wmax; 
   DTe  = DTc/20.; 
   MESS 'dtc=' DTc ' --> dt=' DTe; 
   tfin = 2.1; 
   NPASe = (ENTI PROCH (tfin / DTe)) - 1; 
   NSORT = 2; 
   
 * amortissement (en % ici) 
   xi1 = 5.; 
   TAMOR = TABL 'AMORTISSEMENT'; 
   TAMOR . 'AMORTISSEMENT' = AMOR TMOD1 (prog NMOD1*xi1); 
   
 * chargement 
   OMEGHZ = 15.4; 
   FEX1_P = PJBA FEX1 TMOD1; 
   pr_time = PROG 0. 'PAS' DTe 30.; 
   evex1  = EVOL MANU pr_time (sin (((2*pi*OMEGHZ)*180)/pi * pr_time)); 
   CHA1_P = CHAR FEX1_P evex1; 
   TCHAR = TABL 'CHARGEMENT'; 
   TCHAR .'BASE_A' = CHA1_P; 
 *   TCHAR .'BASE_A' = CHA1_P et CHA2_P; 
   
 * Question 13 : 
 *     Combien de pÃ©riodes de chargement ? 
   nPERIOD = 3.; 
 * -->  3 
   dess evex1 XBOR 0. 0.2; 
   
 * Question 14 : 
 *     Quel type de schÃ©ma utilise \verb|DYNE| ? 
 * --> Le schÃ©ma au diffÃ©rences finies centrÃ©es 
 *     Est-il explicite ou implicite ? 
 * --> explicite 
 *     Existe t-il une condition de stabilitÃ© ? Si oui, laquelle ? 
 * --> SchÃ©ma stable si wmax*DTe < = 2. 
   
 * Question 15 : 
 *     Choisissez un pas de temps de calcul en le justifiant. 
 * --> Le pas de temps de calcul doit etre inferieur au pas de temps 
 * critique DTc, on peut donc choisir DTe = 1./10*wmax 
   
 * Question 16 : 
 *      RÃ©alisez le calcul et visualisez les Ã©volutions temporelles 
 * --------------------------------------------- 
 * resolution par DYNE 
   TRESU = DYNE 'DIFFERENCES_CENTREES' 
           TMOD1 TAMOR TCHAR NPASe DTe NSORT; 
 * --------------------------------------------- 
   
 * post traitement 
   evux1 = EVOL 'ROUG' RECO TRESU TMOD1 'DEPL' PEX1 'UX'; 
   evux2 = EVOL 'ORAN' RECO TRESU TMOD1 'DEPL' PEX2 'UX'; 
   evuy1 = EVOL 'BLEU' RECO TRESU TMOD1 'DEPL' PEX1 'UY'; 
   evuy2 = EVOL 'AZUR' RECO TRESU TMOD1 'DEPL' PEX2 'UY'; 
   evuz1 = EVOL 'VERT' RECO TRESU TMOD1 'DEPL' PEX1 'UZ'; 
   evuz2 = EVOL 'TURQ' RECO TRESU TMOD1 'DEPL' PEX2 'UZ'; 
   
   TITRE (chai 'DYNE - Calcul lineaire - \Dt = 'DTe's - tfin=' tfin 's'); 
